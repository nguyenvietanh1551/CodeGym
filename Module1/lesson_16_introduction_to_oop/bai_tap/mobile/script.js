class Mobile {
    constructor(name, dom) {
        this.name = name;
        this.dom = dom;
        this.isOn = false;
        this.battery = 100;
        this.draft = "";
        this.inbox = [];
        this.sent = [];
        this.updateUI();
    }

    togglePower() {
        if (this.battery === 0) {
            this.log("Pin y·∫øu. Kh√¥ng th·ªÉ b·∫≠t.");
            return;
        }
        this.isOn = !this.isOn;
        this.log(this.isOn ? "ƒê√£ b·∫≠t m√°y." : "ƒê√£ t·∫Øt m√°y.");
        this.updateUI();
    }

    charge() {
        this.battery = 100;
        this.log("üîå ƒê√£ s·∫°c pin ƒë·∫ßy.");
        this.updateUI();
    }

    compose(message) {
        if (!this.canUse()) return;
        this.draft = message;
        this.log(`‚úçÔ∏è ƒê√£ so·∫°n: "${message}"`);
        this.useBattery();
    }

    send(receiver) {
        if (!this.canUse()) return;
        if (!this.draft) {
            this.log("Kh√¥ng c√≥ n·ªôi dung ƒë·ªÉ g·ª≠i.");
            return;
        }
        receiver.receive(this.name, this.draft);
        this.sent.push(this.draft);
        this.log(`üì§ ƒê√£ g·ª≠i t·ªõi ${receiver.name}: "${this.draft}"`);
        this.draft = "";
        this.useBattery();
        this.updateUI();
    }

    receive(from, message) {
        if (!this.canUse()) return;
        this.inbox.push(`üì© T·ª´ ${from}: ${message}`);
        this.log(`üì® Nh·∫≠n tin t·ª´ ${from}`);
        this.useBattery();
        this.updateUI();
    }

    viewInbox() {
        if (!this.canUse()) return;
        if (this.inbox.length === 0) {
            this.log("üì• H·ªôp th∆∞ tr·ªëng.");
        } else {
            this.log("üì• H·ªôp th∆∞ ƒë·∫øn:");
            this.inbox.forEach(msg => this.log(msg));
        }
        this.useBattery();
    }

    viewSent() {
        if (!this.canUse()) return;
        if (this.sent.length === 0) {
            this.log("üì§ Ch∆∞a g·ª≠i tin nh·∫Øn n√†o.");
        } else {
            this.log("üì§ Tin ƒë√£ g·ª≠i:");
            this.sent.forEach(msg => this.log(msg));
        }
        this.useBattery();
    }

    useBattery() {
        if (this.battery > 0) this.battery--;
        if (this.battery === 0) {
            this.isOn = false;
            this.log("üì¥ H·∫øt pin. M√°y ƒë√£ t·∫Øt.");
        }
        this.updateUI();
    }

    canUse() {
        if (!this.isOn) {
            this.log("‚ö†Ô∏è M√°y ƒëang t·∫Øt. H√£y b·∫≠t l√™n.");
            return false;
        }
        if (this.battery === 0) {
            this.log("‚ö†Ô∏è H·∫øt pin.");
            return false;
        }
        return true;
    }

    log(message) {
        const logDiv = this.dom.querySelector('.log');
        logDiv.innerHTML += `<div>${message}</div>`;
        logDiv.scrollTop = logDiv.scrollHeight;
    }

    updateUI() {
        this.dom.querySelector('.battery').textContent = this.battery;
        this.dom.querySelector('.status').textContent = this.isOn ? "B·∫≠t" : "T·∫Øt";
        this.dom.querySelector('.draft').value = this.draft;
    }
}

// Kh·ªüi t·∫°o 2 ƒëi·ªán tho·∫°i
const nokia = new Mobile("Nokia", document.getElementById("nokia"));
const iphone = new Mobile("iPhone", document.getElementById("iphone"));

// C√°c thao t√°c s·ª± ki·ªán
function togglePower(phone) {
    phone.togglePower();
}

function charge(phone) {
    phone.charge();
}

function composeMessage(phone) {
    const text = phone.dom.querySelector(".draft").value;
    phone.compose(text);
}

function sendMessage(sender, receiver) {
    sender.send(receiver);
}

function viewInbox(phone) {
    phone.viewInbox();
}

function viewSent(phone) {
    phone.viewSent();
}
